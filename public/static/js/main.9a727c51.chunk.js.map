{"version":3,"sources":["redux/reducers.js","redux/store.js","components/SignIn.js","components/Login.js","redux/actions/userActions.js","components/SignUp.js","styles/theme.js","components/navigation/MenuPopUp.js","redux/actions/booksActions.js","components/navigation/LeftNavigation.js","components/navigation/useOutsideClick.js","components/home/EntryCard.js","components/home/Home.js","redux/actions/logsActions.js","components/newEntry/AddProcedure.js","components/newEntry/NewEntry.js","components/ViewEntry.js","Router.js","App.js","serviceWorker.js","index.js"],"names":["combineReducers","user","state","token","isLoggedIn","firstName","lastName","action","type","value","books","book","id","logs","selectedLog","isLoading","log","procedures","book_entry_number","book_name","last_updated","quick_info","results","rxn_sketch","fileType","fileData","user_id","yield","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducers","applyMiddleware","thunk","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignIn","props","classes","Container","component","maxWidth","CssBaseline","className","Avatar","Typography","variant","noValidate","onSubmit","handleSubmit","TextField","required","fullWidth","label","name","userLoginInfo","email","onChange","handleTextChange","autoComplete","autoFocus","password","Button","color","Link","href","Login","location","dispatch","useDispatch","history","useHistory","useSelector","React","useState","setUserLoginInfo","from","pathname","useEffect","userObj","localStorage","getItem","JSON","parse","to","e","preventDefault","fetch","process","method","headers","body","stringify","then","res","json","setItem","catch","console","createSession","target","handleSignUpNavigation","push","SignUp","newUserData","setNewUserData","handleChange","userData","response","alert","Grid","container","item","xs","sm","justify","createMuiTheme","typography","h6","fontFamily","MenuPopUp","Popper","open","anchorEl","role","undefined","transition","disablePortal","TransitionProps","placement","Grow","style","transformOrigin","Paper","ClickAwayListener","onClickAway","handleClose","MenuList","autoFocusItem","menuItemContent","map","menuItem","i","linkTo","extraLinkAttribute","onClick","handleClick","MenuItem","text","fetchBooks","userToken","labelField","justifyContent","fontSize","icon","cursor","LeftNavigation","ref","useRef","allBooks","setAnchorEl","anchorBookEl","setAnchorBookEl","Boolean","bookOpen","bookName","displayInput","bookInput","setBookInput","reversedBooks","setReversedBooks","callback","current","contains","document","addEventListener","removeEventListener","useOutsideClick","handleBookStateSubmit","handleBookTextClick","currentTarget","handleBookClose","bookSubmitObject","addBook","handleDeleteBook","bookId","message","deleteBook","reverseBooksArr","sort","a","b","reverseAllBooks","Drawer","anchor","ThemeProvider","ListItem","faHome","padding","boxSizing","ListItemText","primary","faUser","removeItem","Divider","List","button","key","bookid","ListItemIcon","getAttribute","EntryCard","rxnSketch","myCanvas","ChemDoodle","ViewerCanvas","index","rxnData","readRXN","loadContent","molecules","shapes","molData","readMOL","loadMolecule","Card","CardHeader","title","bookEntryNumber","titleTypographyProps","subheader","timestamp","parseInt","lastUpdated","Date","toDateString","createDateFromLastUpdated","CardContent","quickInfo","Home","allLogs","recentLogs","setRecentLogs","r","fetchLogs","logsSortedByDate","firstFewLogs","findLatestLogs","length","TextMaskCustom","inputRef","other","inputElement","mask","placeholderChar","keepCharPositions","showMask","AddProcedure","FormControl","InputLabel","htmlFor","Input","handleProcedureChange","inputComponent","FormHelperText","entry","multiline","rows","formField","height","marginLeft","NewEntry","sketcher","setSketcher","match","params","logId","newEntry","setNewEntry","date","setProcedures","newSketcher","SketcherCanvas","useServices","oneMolecule","isMobile","findBookEntryNumber","logsinCurrentBookArr","book_id","updatedNewEntry","newBookEntryNumber","handleEntryChange","newProceduresArray","slice","propertyName","newEntryObject","today","now","setDateAndTimeCreated","sketchDataRxnFile","writeRXN","mol","getMolecule","sketchDataMolFile","writeMOL","setSketchData","payload","addLog","_","ViewEntry","selectedLogId","editableLog","setEditableLog","changesMade","quickInfoShowInput","procedureShowInput","resultsShowInput","yieldShowInput","editEntry","setEditEntry","fetchSelectedLog","dateShowInput","entryShowInput","handleInputChange","newEditableLog","toString","changeDateAndTimeLastUpdated","changeLog","onMouseDown","newEditEntry","canvasClicked","p","confirm","ProtectedRoute","Component","rest","render","Router","path","exact","App","store","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.9a727c51.chunk.js","sourcesContent":["import { combineReducers } from 'redux'\n\nconst user = (state = { token: '', isLoggedIn: false, firstName: '', lastName: ''}, action) => {\n  switch(action.type) {\n    case 'CREATE_SESSION':\n      return { ...state, isLoggedIn: true, token: action.value.token, firstName: action.value.firstName, lastName: action.value.lastName }\n    case 'END_SESSION':\n      return { token: '', isLoggedIn: false, firstName: '', lastName: ''}\n    default:\n      return state\n  }\n}\n\nconst books = (state = [], action) => {\n  switch(action.type) {\n    case 'FETCH_BOOKS':\n      return action.value\n    case 'ADD_BOOK':\n      return [ \n        ...state,\n        {\n          book: action.value.book, \n          id: action.value.id \n        }\n      ]\n    default:\n      return state\n  }\n}\n\nconst logs = (state = [], action) => {\n  switch(action.type) {\n    case 'FETCH_LOGS':\n      return action.value\n    case 'ADD_LOG':\n      return state\n    case 'CHANGE_LOG':\n      // let index;\n      // for (let i = 0; i < state.length; i++) {\n      //   if (action.logId == state[i].logId) {\n      //     index = i\n      return state\n      //   }\n      // }\n      // let newState = state.slice()\n      // newState.splice(index, 1, action.payload)\n      // return newState\n    default:\n      return state\n  }\n}\n\nconst selectedLog = (state = { \n  isLoading: false,\n  log: {\n  procedures: [],\n  book_entry_number: null,\n  book_name: \"\",\n  id: null,\n  last_updated: \"\",\n  quick_info: \"\",\n  results: \"\",\n  rxn_sketch: { fileType: \"\", fileData: \"\"},\n  user_id: null, \n  yield: \"\"\n  } }, action) => {\n    switch(action.type) {\n      case 'FETCHING_SELECTED_LOG':\n        return { ...state, isLoading: true }\n      case 'SUCCESS_FETCH_SELECTED_LOG':\n        return { ...state, log: action.value, isLoading: false }\n      default:\n        return state\n    }\n  }\n\nexport default combineReducers({ user, books, logs, selectedLog })","import { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport reducers from './reducers'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default createStore(reducers, composeEnhancers(applyMiddleware(thunk)))","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport const SignIn = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} \n              noValidate \n              onSubmit={ props.handleSubmit }\n        >\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            value={ props.userLoginInfo.email }\n            onChange={ props.handleTextChange }\n            autoComplete=\"email\"\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            value={ props.userLoginInfo.password }\n            onChange={ props.handleTextChange }\n            id=\"password\"\n            autoComplete=\"current-password\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n              <Link href=\"/signup\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n        </form>\n      </div>\n    </Container>\n  );\n}","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from 'react-router';\nimport { createSession } from '../redux/actions/userActions'\nimport { SignIn } from './SignIn'\nimport { useHistory } from 'react-router-dom'\n\nexport const Login = ({ location }) => {\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const user = useSelector(state => state.user)\n  const [ userLoginInfo, setUserLoginInfo ] = React.useState({\n    email: \"\",\n    password: \"\"\n  })\n  \n  const handleTextChange = e => {\n    setUserLoginInfo({\n      ...userLoginInfo,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    dispatch(createSession(userLoginInfo))\n  }\n\n  const handleSignUpNavigation = () => {\n    history.push(\"/signup\")\n  }\n  const { from } = location.state || {from: { pathname:\"/\" }};\n\n  useEffect(() => {\n    const userObj = localStorage.getItem('user')\n\n    if (userObj) {\n      const action = {\n        type: 'CREATE_SESSION',\n        value: JSON.parse(userObj)\n      }\n      dispatch(action)\n    }\n  }, []);\n  \n  return (\n    <>\n      { user.isLoggedIn ? \n        <Redirect to={from} /> :\n        <SignIn handleSubmit={ handleSubmit }\n                userLoginInfo={ userLoginInfo }\n                handleTextChange={ handleTextChange }\n                handleSignUpNavigation={ handleSignUpNavigation }\n        />\n      }\n    </>\n  );\n}","export const createUser = userData => {\n  return (dispatch) => {\n    // 'https://chem-logger.herokuapp.com/user/create'\n    fetch(`${process.env.REACT_APP_API_URL}/user/create`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userData)\n    })\n    .then(res => res.json())\n    .then(response => {\n      alert('User Created!')\n    }).catch(e => {\n      console.log('issues: ', e)\n    })\n  }\n}\n\nexport const createSession = userLoginInfo => {\n  return (dispatch) => {\n    //'https://chem-logger.herokuapp.com/login'\n    fetch(`${process.env.REACT_APP_API_URL}/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userLoginInfo)\n    })\n      .then(res => res.json())\n      .then(userObj => {\n        const action = {\n          type: 'CREATE_SESSION',\n          value: userObj\n        }\n        localStorage.setItem('user', JSON.stringify(userObj))\n        dispatch(action)\n      }).catch((e) => {\n        console.log(\"issues\", e)\n      })\n  }\n}\n\nexport const endSession = () => {\n  return {\n      type: 'END_SESSION'\n    }\n}","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { createUser } from '../redux/actions/userActions'\nimport { useHistory } from 'react-router-dom'\nimport { Container, TextField, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport const SignUp = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const [ newUserData, setNewUserData ] = React.useState({\n    email: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    password: \"\"\n  })\n\n  const handleChange = e => {\n    setNewUserData({\n      ...newUserData,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    dispatch(createUser(newUserData))\n    history.push(\"/login\")\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form className={classes.form} \n              noValidate\n              onSubmit={ handleSubmit }\n        >\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"firstName\"\n                variant=\"outlined\"\n                value={ newUserData.firstName }\n                onChange={ handleChange }\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                value={ newUserData.lastName }\n                onChange={ handleChange }\n                autoComplete=\"lname\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                value={ newUserData.email }\n                onChange={ handleChange }\n                autoComplete=\"email\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                value={ newUserData.password }\n                onChange={ handleChange }\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link href=\"/login\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  );\n}","import { createMuiTheme } from '@material-ui/core/styles'\n\nconst theme = createMuiTheme({\n  typography: {\n    h6: {\n      fontFamily: \"'Raleway', sans-serif\",\n    }\n  }\n})\n\nexport default theme","import React from 'react';\nimport { Popper, Grow, Paper, ClickAwayListener, MenuList, MenuItem } from '@material-ui/core'\nimport { Link } from 'react-router-dom'\n\nexport const MenuPopUp = (props) => {\n  return (\n    <Popper open={props.open} \n            anchorEl={props.anchorEl} \n            role={undefined} \n            transition disablePortal >\n      {({ TransitionProps, placement }) => (\n        <Grow\n          {...TransitionProps}\n          style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }} >\n          <Paper>\n            <ClickAwayListener onClickAway={props.handleClose}>\n              <MenuList autoFocusItem={ props.open } id=\"menu-list-grow\">\n                {props.menuItemContent.map((menuItem, i) => {\n                  return (\n                    <div>\n                      { props.anchorEl && menuItem.linkTo ? \n                        <Link to={ menuItem.linkTo + props.extraLinkAttribute }\n                              onClick={ menuItem.handleClick }\n                              className=\"link\" >\n                         <MenuItem>\n                           { menuItem.text }\n                        </MenuItem>\n                      </Link> :\n                      <MenuItem onClick={ menuItem.handleClick } >\n                          { menuItem.text }\n                      </MenuItem> \n                      }\n                    </div>\n                  )\n                  })}\n              </MenuList>\n            </ClickAwayListener>\n          </Paper>\n        </Grow>\n      )}\n    </Popper>\n  )\n}\n","export const fetchBooks = (userToken) => {\n  return (dispatch) => {\n    // 'https://chem-logger.herokuapp.com/books'\n    fetch(`${process.env.REACT_APP_API_URL}/books`, {\n      headers: {\n        token: userToken\n      }\n    })\n      .then(res => res.json())\n      .then(response => {\n        const action = {\n          type: 'FETCH_BOOKS',\n          value: response\n        }\n        dispatch(action)\n      }).catch(e => {\n        console.log(e)\n      })\n  }\n}\n\nexport const addBook = (bookInput, userToken) => {\n  return (dispatch) => {\n    // 'https://chem-logger.herokuapp.com/books/create'\n    fetch(`${process.env.REACT_APP_API_URL}/books/create`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        token: userToken\n      },\n      body: JSON.stringify(bookInput)\n    })\n      .then(res => res.json())\n      .then(json => {\n        const action = {\n          type: 'ADD_BOOK',\n          value: json\n        }\n        dispatch(action)\n      }).catch((e) => {\n        console.log(e)\n      })\n  }\n}\n\nexport const deleteBook = ( bookId, userToken ) => {\n  return (dispatch) => {\n\n    fetch(`${process.env.REACT_APP_API_URL}/books/delete/${bookId}`, {\n      method: 'DELETE',\n      headers: {\n        token: userToken\n      },\n    })\n      .then(res => res.json())\n      .then(json => {\n        if(json.message === \"Book has logs\") {\n          alert(\"You can't delete a book that contains logs!\")\n        }\n        dispatch(fetchBooks(userToken))\n      }).catch((e) => {\n        console.log('err:', e)\n      })\n  }\n}","import React, { useRef, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom'\nimport { Drawer, Divider, List, ListItem, ListItemIcon, ListItemText, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { faHome, faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutlineOutlined';\nimport { ThemeProvider } from '@material-ui/styles'\nimport theme from '../../styles/theme'\nimport { useOutsideClick } from \"./useOutsideClick\";\nimport { MenuPopUp } from './MenuPopUp'\nimport { addBook, deleteBook } from '../../redux/actions/booksActions'\nimport { endSession } from '../../redux/actions/userActions'\n\nconst useStyles = makeStyles(() => ({\n  labelField: {\n    width: \"175px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    margin: \"10px\",\n  },\n  label: {\n    display: \"inline-block\",\n    fontSize: \"22px\",\n  },\n  icon: {\n    margin: \"0 10px\",\n    cursor: \"pointer\",\n  }\n}));\n\nexport const LeftNavigation = (props) => {\n  const classes = useStyles();\n  const ref = useRef();\n  const dispatch = useDispatch();\n  const allBooks = useSelector( state => state.books )\n  const [ anchorEl, setAnchorEl ] = React.useState(null);\n  const [ anchorBookEl, setAnchorBookEl ] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const bookOpen = Boolean(anchorBookEl);\n\n  const [ bookInput, setBookInput ] = React.useState({\n    bookName: \"\",\n    displayInput: false,\n  })\n  const [ reversedBooks, setReversedBooks ] = React.useState([])\n\n  const reverseAllBooks = () => {\n    let reverseBooksArr = allBooks.sort((a, b) => b.id - a.id)\n    setReversedBooks(reverseBooksArr)\n  }\n\n  const handleBookChange = e => {\n    setBookInput({\n      ...bookInput,\n      bookName: e.target.value\n    })\n  }\n\n  useOutsideClick(ref, (e) => {\n    //to avoid initial click trigger, before form renders\n    if (bookInput.displayInput) {\n      //disregard empty, null, space values\n      if (bookInput.bookName === \"\" || bookInput.bookName === \" \") {\n        setBookInput({\n          bookName: \"\",\n          displayInput: false,\n        })\n      } else {\n        handleBookStateSubmit(e)\n      }\n    }\n  });\n\n  const handleTextClick = (e) => {\n    setAnchorEl(e.currentTarget);\n  };\n  const handleBookTextClick = (e) => {\n    setAnchorBookEl(e.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleBookClose = () => {\n    setAnchorBookEl(null);\n  };\n\n  const handleBookStateSubmit = e => {\n    e.preventDefault()\n    let bookSubmitObject = {\n      bookName: bookInput.bookName\n    }\n    dispatch(addBook(bookSubmitObject, props.userToken))\n  }\n\n  const signOut = () => {\n    localStorage.removeItem('user')\n    //sets isloggedin to false, clears user info from redux store\n    dispatch(endSession())\n  }\n\n  const handleDeleteBook = bookId => {\n    dispatch(deleteBook(bookId, props.userToken))\n    handleBookClose()\n  }\n\n  useEffect(() => {\n    reverseAllBooks()    \n    setBookInput({\n      bookName: \"\",\n      displayInput: false,\n    })\n  }, [allBooks])\n\n  return (\n    <Drawer\n      variant=\"permanent\"\n      anchor=\"left\"\n    >\n      {/* <List>\n        {['Inventory', 'Members', 'Announcements'].map((text) => (\n          <ListItem\n            button\n            key={ text }\n          >\n            <ListItemIcon></ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List> */}\n      <ThemeProvider theme={ theme }>\n        <Link to='/' className=\"link\" >\n          <ListItem>\n            <FontAwesomeIcon icon={faHome} \n                            style={{ padding: '10px 20px', boxSizing: \"content-box\" }}\n                            className=\"home-icon\"/>\n            <ListItemText primary=\"Home\" />\n          </ListItem>\n        </Link>\n        <ListItem onClick={ handleTextClick }>\n          <FontAwesomeIcon icon={ faUser } \n                          style={{ padding: '10px 20px', cursor: \"pointer\", boxSizing: \"content-box\" }}/>\n          <ListItemText primary={ props.user.firstName && props.user.lastName \n                                  ?\n                                    props.user.firstName + \" \" + props.user.lastName\n                                  :\n                                    props.user.email }\n                        style={{ cursor: \"pointer\" }}/>\n        </ListItem>\n        <MenuPopUp \n          open={ open }\n          handleClose={ handleClose }\n          anchorEl={ anchorEl }\n          menuItemContent={\n            [\n              {\n                text: \"Sign Out\",\n                linkTo: \"\",\n                handleClick: () => signOut()\n              }\n            ]\n          }\n          extraLinkAttribute={ \"\" }/>\n      </ThemeProvider>\n      <Divider />\n      <div className={classes.labelField}>\n        <Typography className={classes.label}>\n          Books\n        </Typography>\n        <AddCircleOutlineOutlinedIcon \n          className={classes.icon}\n          onClick={() => {\n            setBookInput({\n              ...bookInput, \n              displayInput: !bookInput.displayInput,\n            })\n          }}/>\n      </div>\n      {bookInput.displayInput\n        && \n          <form ref={ref} onSubmit={ handleBookStateSubmit }>\n            <input \n              autoFocus=\"autofocus\" \n              className=\"left-nav-input\"\n              onChange={ handleBookChange }/>\n          </form>}\n      <List>\n        {reversedBooks.map((b) => (\n          <ListItem \n            button \n            key={ b.id }\n            onClick={ handleBookTextClick }\n            bookid = { b.id }>\n            <ListItemIcon></ListItemIcon>\n            <ListItemText primary={ b.book } />\n          </ListItem>\n        ))}\n      </List>\n      <MenuPopUp \n        open={ bookOpen }\n        handleClose={ handleBookClose }\n        anchorEl={ anchorBookEl }\n        menuItemContent={\n          [\n            {\n              text: \"New Entry\",\n              linkTo: \"/new-entry/\",\n              handleClick: () => handleClose()\n            },\n            // {\n            //   text: \"Table Of Contents\",\n            //   linkTo: \"\",\n            // },\n            // {\n            //   text: \"View All\",\n            //   linkTo: \"\",\n            // },\n            {\n              text: \"Delete Book\",\n              handleClick: () => handleDeleteBook(anchorBookEl.getAttribute(\"bookid\"))\n            }\n          ]}\n        extraLinkAttribute={ anchorBookEl ? anchorBookEl.getAttribute(\"bookid\"): \"\" }/>\n    </Drawer>\n  )\n}","import { useEffect } from \"react\";\n\nexport const useOutsideClick = (ref, callback) => {\n  const handleClick = e => {\n    if (ref.current && !ref.current.contains(e.target)) {\n      callback(e);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"click\", handleClick);\n\n    return () => {\n      document.removeEventListener(\"click\", handleClick);\n    };\n  });\n};\n","import React, { useEffect } from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\nimport { Card, CardHeader, CardContent, Typography } from '@material-ui/core/';\n\n/* global ChemDoodle */\n\n// const useStyles = makeStyles((theme) => ({\n//   header: {\n//     // color: 'red',\n\n//   },\n// }));\n\nexport const EntryCard = (props) => {\n  // const classes = useStyles();\n\n  const createDateFromLastUpdated = () => {\n    //convert from str to int \n     let timestamp = parseInt(props.lastUpdated)\n     let date = new Date(timestamp)\n     //convert to be more legible for humans\n     let humanDate = date.toDateString()\n     return humanDate\n  }\n\n  useEffect(() => {\n    if (props.rxnSketch.fileData) {\n      let myCanvas = new ChemDoodle.ViewerCanvas(`myCanvas-${props.index}`, '200', '100');\n      if (props.rxnSketch.fileType === \"rxn\") {\n        let rxnData = ChemDoodle.readRXN(props.rxnSketch.fileData);\n        myCanvas.loadContent(rxnData.molecules, rxnData.shapes)\n      }\n      if (props.rxnSketch.fileType === \"mol\") {\n        let molData = ChemDoodle.readMOL(props.rxnSketch.fileData)\n        myCanvas.loadMolecule(molData)\n      }\n    }\n  }, [props]);\n\n  return (\n    <Card>\n      <CardHeader title={props.bookName + ' - Entry ' + props.bookEntryNumber}\n                  titleTypographyProps={{ variant:'h6' }}\n                  // className={classes.header}\n                  subheader={ createDateFromLastUpdated() }/>\n      <div className=\"entry-card-canvas-div\">\n        { props.rxnSketch.fileData ? \n          <canvas id={`myCanvas-${props.index}`} /> \n        : \n          <div className=\"entry-card-no-canvas\">\n            <Typography>\n              No Reaction Scheme\n            </Typography>\n          </div> }\n      </div>\n      <CardContent>\n        <Typography variant=\"body2\" \n                    color=\"textSecondary\" \n                    component=\"p\">\n          { props.quickInfo }\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom'\nimport { LeftNavigation } from '../navigation/LeftNavigation'\nimport { fetchBooks } from '../../redux/actions/booksActions'\nimport { fetchLogs } from '../../redux/actions/logsActions'\nimport { EntryCard } from './EntryCard'\n\nexport const Home = () => {\n  const dispatch = useDispatch()\n  const allLogs = useSelector( state => state.logs )\n  const user = useSelector ( state => state.user )\n  const userToken = user.token\n  const [ recentLogs, setRecentLogs ] = React.useState([])\n  \n  const findLatestLogs = () => {\n    let logsSortedByDate = []\n    let firstFewLogs = []\n    logsSortedByDate = allLogs.sort((a, b) => {\n      return b.last_updated - a.last_updated\n    })\n\n    for (let i = 0; i < 10; i++) {\n      if (!logsSortedByDate[i]) {\n        setRecentLogs(firstFewLogs)\n      } else {\n        firstFewLogs.push(logsSortedByDate[i])\n      }\n    }\n    setRecentLogs(firstFewLogs)\n  }\n\n  useEffect(() => {\n    dispatch(fetchLogs(userToken))\n    dispatch(fetchBooks(userToken))\n  }, []);\n\n  useEffect(() => {\n    findLatestLogs()\n  }, [ allLogs ]);\n\n  return (\n    <>\n      <LeftNavigation \n        userToken={ userToken }\n        user={ user }\n      />\n      {/* {allBooksFromState.length === 0 ? <p>no books</p> : <p>{allBooksFromState[0].book}</p>} */}\n      <div id=\"home-container\">\n        <h1 className=\"headline-text\">\n          { user.firstName ? `Welcome ${user.firstName}!` : \"Welcome!\"}\n        </h1>\n        <div id=\"home-recent-logs\">\n          <h3>Recent Logs:</h3>\n          <div>\n            {recentLogs.length === 0 ? \n              'No Entries'\n              :\n              <div className=\"entry-card-container-div\">\n                {recentLogs.map((log, i) => {\n                  return (\n                    <div className=\"entry-card-div\">\n                      <Link to={`/view-entry/${ log.id }`} \n                            className=\"link\"\n                      >\n                        <EntryCard\n                          key={ i }\n                          index={ i }\n                          bookName={ log.book }\n                          rxnSketch={ log.rxn_sketch }\n                          quickInfo={ log.quick_info }\n                          lastUpdated={ log.last_updated }\n                          bookEntryNumber={ log.book_entry_number }\n                        />\n                      </Link>\n                    </div>\n                  )\n                })}\n              </div>\n            }\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}","export const fetchLogs = (userToken) => {\n  return (dispatch) => {\n    // 'https://chem-logger.herokuapp.com/logs'\n    fetch(`${process.env.REACT_APP_API_URL}/logs`, {\n      headers: {\n        token: userToken\n      }\n    })\n      .then(res => res.json())\n      .then(response => {\n        const action = {\n          type: 'FETCH_LOGS',\n          value: response.map(r => {\n            return {\n              ...r,\n              rxn_sketch: JSON.parse(r.rxn_sketch)\n            }\n          })\n        }\n        dispatch(action)\n      }).catch(e => {\n        console.log(e)\n      })\n  }\n}\n\nexport const addLog = (log, userToken) => {\n  return (dispatch) => {\n    // 'https://chem-logger.herokuapp.com/logs/create'\n    fetch(`${process.env.REACT_APP_API_URL}/logs/create`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        token: userToken\n      },\n      body: JSON.stringify(log)\n    })\n      .then(res => {\n        // res.json()\n      })\n      .then( response => {\n        // const action = {\n        //   type: 'ADD_LOG',\n        //   value: response\n        // }\n        // dispatch(action)\n      }).catch((e) => {\n        console.log(\"issues\", e)\n      })\n  }\n}\n\nexport const fetchSelectedLog = (logId, userToken) => {\n  return (dispatch) => {\n    const action = {\n      type: 'FETCHING_SELECTED_LOG'\n    }\n    dispatch(action)\n\n    // `https://chem-logger.herokuapp.com/logs/${logId}`\n    fetch(`${process.env.REACT_APP_API_URL}/logs/${logId}`, {\n      headers: {\n        token: userToken\n      }\n    })\n      .then(res => res.json())\n      \n      .then(response => {\n        //do you do .then with fetching selected log...then the success one?\n        const action = {\n          type: 'SUCCESS_FETCH_SELECTED_LOG',\n          value: {\n            ...response,\n            rxn_sketch: JSON.parse(response.rxn_sketch)\n          }\n        }\n        dispatch(action)\n      }).catch(e => {\n        console.log('issues: ', e)\n      })\n\n  }\n}\n\nexport const changeLog = (logId, payload, userToken) => {\n  return (dispatch) => {\n    // `https://chem-logger.herokuapp.com/logs/update/${logId}`\n    fetch(`${process.env.REACT_APP_API_URL}/logs/update/${logId}`, {\n      method: 'PUT',\n      headers: {\n          'Content-Type': 'application/json',\n          token: userToken\n        },\n      body: JSON.stringify(payload)\n    })\n    .then(res => res.json())\n    .then( response => {\n      alert('Log Updated!')\n    })\n    .catch(e => {\n      console.log('issues: ', e)\n    })\n  }\n}","import React from 'react';\nimport { TextField, FormControl, InputLabel, Input, FormHelperText } from '@material-ui/core';\nimport MaskedInput from 'react-text-mask';\n\nfunction TextMaskCustom(props) {\n  const { inputRef, ...other } = props;\n\n  return (\n    <MaskedInput\n      {...other}\n      ref={(ref) => inputRef(ref ? ref.inputElement : null)}\n      mask={[/\\d/, /\\d/, '/', /\\d/, /\\d/, '/', /\\d/, /\\d/]}\n      placeholderChar={'\\u2000'}\n      keepCharPositions\n      showMask\n    />\n  );\n}\n\nexport const AddProcedure = (props) => {\n  return (\n    <>\n      <div id=\"add-procedure-date-container\">\n        <FormControl>\n          <InputLabel htmlFor=\"formatted-text-mask-input\">Date</InputLabel>\n          <Input\n            onChange={ (e) => {\n              props.handleProcedureChange(e, props.index) \n            }}\n            name=\"date\"\n            id=\"formatted-text-mask-input\"\n            inputComponent={ TextMaskCustom }\n          />\n          <FormHelperText>mm/dd/yy</FormHelperText>\n        </FormControl>\n      </div>\n      <div id=\"add-procedure-entry-container\">\n        <TextField\n          id=\"outlined-multiline-static\"\n          label=\"Procedure\"\n          name='entry'\n          value={ props.procedures.entry}\n          onChange={ (e) => {\n            props.handleProcedureChange(e, props.index) \n          }}\n          multiline\n          variant=\"outlined\"\n          rows={4}\n          fullWidth/>\n      </div>\n\n  </>\n  )\n}","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LeftNavigation } from '../navigation/LeftNavigation'\nimport { AddProcedure } from './AddProcedure';\nimport { addLog } from '../../redux/actions/logsActions';\nimport { fetchBooks } from '../../redux/actions/booksActions'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { TextField, Button } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\n/* global ChemDoodle */\n\nconst useStyles = makeStyles({\n  formField: {\n    backgroundColor: 'white',\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n    padding: '20px',\n    marginLeft: '220px',\n    alignItems: 'center',\n  },\n  button: {\n    width: '30%',\n    margin: '10px'\n  },\n})\n\nexport const NewEntry = (props) => {\n  const classes = useStyles();\n  const user = useSelector( state => state.user )\n  const userToken = user.token\n  const allLogs = useSelector(state => state.logs)\n  const dispatch = useDispatch();\n  const history = useHistory()\n  const [ sketcher, setSketcher ] = React.useState(null);\n  \n  const [ newEntry, setNewEntry ] = React.useState({\n    bookId: props.match.params.id,\n    bookEntryNumber: 1,\n    rxnSketch: {\n      fileData: null,\n      fileType: null,\n    },\n    quickInfo: \"\",\n    results: \"\",\n    yield: \"\",\n    lastUpdated: \"\",\n    logId: 0,\n  })\n\n  const [ procedures, setProcedures ] = React.useState([\n      {\n        date: \"\",\n        entry: \"\"\n      }\n    ]\n  )\n  // useEffect(() => {findBookEntryNumber()}, [allLogs])\n  useEffect(() => {\n    dispatch(fetchBooks(userToken))\n     //need to make sketcher responsive*****\n    let newSketcher = new ChemDoodle.SketcherCanvas(\"canvas-id\", \"850\", \"350\", {\n      useServices: false,\n      oneMolecule: false,\n      isMobile: false,\n    });\n    setSketcher(newSketcher)\n    findBookEntryNumber()\n  }, [])\n\n  const findBookEntryNumber = () => {\n    const logsinCurrentBookArr = [];\n    //search allLogs for book_id that matches props.match.params.id, add these to array\n    for ( let i = 0; i < allLogs.length; i++ ) {\n      if ( allLogs[i].book_id == props.match.params.id ) {\n        logsinCurrentBookArr.push(allLogs[i])\n      }\n    }\n    //if there aren't any, entry is already set to one so return\n    if ( logsinCurrentBookArr.length === 0 ) {\n      return\n    }\n    //sort array by bookEntryNumber in descending order \n    logsinCurrentBookArr.sort((a, b) => b.book_entry_number - a.book_entry_number)\n    //add 1 to biggest bookEntryNumber, return this currentBookEntryNumber\n    let updatedNewEntry = newEntry\n    let newBookEntryNumber = logsinCurrentBookArr[0].book_entry_number + 1\n    updatedNewEntry.bookEntryNumber = newBookEntryNumber\n    setNewEntry(updatedNewEntry)\n  }\n\n  const handleEntryChange = e => {\n    setNewEntry({\n      ...newEntry,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  const handleProcedureChange = (e, i) => {\n    const newProceduresArray = procedures.slice()\n    const propertyName = e.target.name\n    newProceduresArray[i][propertyName]= e.target.value\n    setProcedures(newProceduresArray)\n  }\n\n  const addProcedure = () => {\n    setProcedures([\n      ...procedures,\n        {\n          date: \"\",\n          entry: \"\"\n        }\n    ])\n  }\n\n  const setDateAndTimeCreated = () => {\n    let newEntryObject = newEntry\n    const today = Date.now();\n    newEntryObject.lastUpdated = today\n    setNewEntry({newEntryObject})\n  }\n\n  const setSketchData = () => {\n    let newEntryObject = newEntry\n    let molecules = sketcher.molecules\n    let shapes = sketcher.shapes\n    if (shapes.length) {\n      let sketchDataRxnFile = ChemDoodle.writeRXN(molecules, shapes)\n      newEntryObject.rxnSketch.fileData = sketchDataRxnFile\n      newEntryObject.rxnSketch.fileType = \"rxn\"\n      setNewEntry({newEntryObject})\n    } else if (molecules.length) {\n        let mol = sketcher.getMolecule()\n        let sketchDataMolFile = ChemDoodle.writeMOL(mol)\n        newEntryObject.rxnSketch.fileData = sketchDataMolFile\n        newEntryObject.rxnSketch.fileType = \"mol\"\n        setNewEntry({newEntryObject})\n    }\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    setDateAndTimeCreated()\n    setSketchData()\n    const payload = { ...newEntry, procedures }\n    dispatch(addLog(payload, userToken))\n    alert('Entry added!')\n    history.push(\"/\")\n  }\n\n  return (\n    <>\n      <LeftNavigation \n        userToken={ userToken }\n        user={ user }/>\n      <form className={ classes.formField } onSubmit={ handleSubmit }>\n        <div>\n          <TextField\n            label=\"Quick Info (<10 words)\"\n            name=\"quickInfo\"\n            value={ newEntry.quickInfo }\n            onChange={ handleEntryChange }\n            fullWidth/>\n          <div id=\"container-canvas\">\n            <canvas id=\"canvas-id\" />\n          </div>\n          <label className=\"body-text\" >Procedure:</label>\n          <br />\n          {procedures.map((_, i) => {\n            return (\n              <AddProcedure\n                key={i}\n                index={i}\n                handleProcedureChange={ handleProcedureChange }\n                procedures={ procedures } \n              />\n            )\n          })}\n        </div>\n        <Button\n          variant=\"contained\"\n          onClick={ addProcedure }\n          className={classes.button}>\n          Add a new Day\n        </Button>\n        <div className=\"new-entry-text-container\">\n          <TextField\n            id=\"standard-basic\"\n            label=\"Results\"\n            name=\"results\"\n            value={ newEntry.results }\n            onChange={ handleEntryChange }\n            fullWidth/>\n        </div>\n        <div className=\"new-entry-text-container\">\n          <TextField\n            id=\"standard-basic\"\n            label=\"Yield (%)\"\n            name=\"yield\"\n            value={ newEntry.yield }\n            onChange={ handleEntryChange }\n            fullWidth/>\n        </div>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          className={classes.button}>\n          Save\n        </Button>\n        <div id=\"new-entry-number-container\">\n          <h3>Entry {newEntry.bookEntryNumber}</h3>\n        </div>\n      </form>\n    </>\n  )\n}","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LeftNavigation } from './navigation/LeftNavigation'\nimport { fetchSelectedLog } from '../redux/actions/logsActions'\nimport { changeLog } from '../redux/actions/logsActions'\nimport { fetchBooks } from '../redux/actions/booksActions'\nimport { Button } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\n/* global ChemDoodle */\n\nexport const ViewEntry = (props) => {\n  const history = useHistory()\n  const dispatch = useDispatch();\n  const selectedLogId = props.match.params.id\n  const user = useSelector( state => state.user )\n  const userToken = user.token\n  const [ sketcher, setSketcher ] = React.useState(null);\n  const selectedLog = useSelector( state => state.selectedLog.log )\n  const isLoading = useSelector( state => state.selectedLog.isLoading )\n  \n  // const updateLoading = () => {\n  //   if (selectedLog) {\n  //     setIsLoading(false)\n  //   }\n  // }\n  const [ editableLog, setEditableLog ] = React.useState({...selectedLog})\n  // const findSelectedLog = state => {\n  //   return state.logs.find(l => l.id == selectedLogId)\n  // }\n  // const selectedLog = useSelector(state => findSelectedLog(state))\n\n  const [ editEntry, setEditEntry ] = React.useState({\n    changesMade: false,\n    quickInfoShowInput: false,\n    procedureShowInput: false,\n    resultsShowInput: false,\n    yieldShowInput: false,\n    procedures: []\n  })\n\n  useEffect(() => {\n    dispatch(fetchSelectedLog(selectedLogId, userToken))\n    dispatch(fetchBooks(userToken))\n  }, [])\n\n  useEffect(() => {\n    // updateLoading()\n    setEditEntry({\n      ...editEntry,\n      procedures: selectedLog?.procedures?.map(() => ({\n        dateShowInput: false,\n        entryShowInput: false,\n      }))\n    })\n    setEditableLog({...selectedLog})\n\n    if (!sketcher) {\n      //make responsive\n      let myCanvas = new ChemDoodle.SketcherCanvas(\"canvas-id\", \"600\", \"350\", {\n        useServices: false,\n        oneMolecule: false,\n        isMobile: false,\n      });\n      setSketcher(myCanvas)\n      // Make new sketcher\n      return \n    }\n    \n    if (selectedLog?.rxn_sketch?.fileType === \"rxn\") {\n      let rxnData = ChemDoodle.readRXN(selectedLog.rxn_sketch.fileData);\n      sketcher.loadContent(rxnData.molecules, rxnData.shapes)\n    }\n    if (selectedLog?.rxn_sketch?.fileType === \"mol\") {\n      let molData = ChemDoodle.readMOL(selectedLog.rxn_sketch.fileData)\n      sketcher.loadMolecule(molData)\n    }\n  }, [selectedLog])\n\n  const handleInputChange = e => {\n    setEditableLog({\n      ...editableLog,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  const handleProcedureChange = (e, i) => {\n      setEditableLog({\n        ...editableLog,\n        procedures: [\n          ...editableLog.procedures.slice(0, i),\n          {\n            ...editableLog.procedures[i],\n            [e.target.name]: e.target.value\n          },\n          ...editableLog.procedures.slice(i + 1)\n        ]\n      })\n  }\n\n  //'save changes' or 'discard changes' buttons appear when clicking on canvas\n  let canvasClicked = () => {\n    let newEditEntry = { ...editEntry, changesMade: true }\n    setEditEntry(newEditEntry)\n  }\n\n  const changeDateAndTimeLastUpdated = () => {\n    let newEditableLog = editableLog\n    const today = Date.now();\n    newEditableLog.last_updated = today.toString()\n    setEditableLog(newEditableLog)\n  }\n\n  const setSketchData = () => {\n    let newEditableLog = editableLog\n    let molecules = sketcher.molecules\n    let shapes = sketcher.shapes\n    if (shapes.length) {\n      let sketchDataRxnFile = ChemDoodle.writeRXN(molecules, shapes)\n      newEditableLog.rxn_sketch.fileData = sketchDataRxnFile\n      newEditableLog.rxn_sketch.fileType = \"rxn\"\n      setEditableLog(newEditableLog)\n    } else if (molecules.length) {\n        let mol = sketcher.getMolecule()\n        let sketchDataMolFile = ChemDoodle.writeMOL(mol)\n        newEditableLog.rxn_sketch.fileData = sketchDataMolFile\n        newEditableLog.rxn_sketch.fileType = \"mol\"\n        setEditableLog(newEditableLog)\n    }\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    changeDateAndTimeLastUpdated()\n    setSketchData()\n    const payload = { ...editableLog }\n    dispatch(changeLog(selectedLogId, payload, userToken))\n    history.push(\"/\")\n  }\n\n  return (\n    <>\n      <LeftNavigation userToken={ userToken }\n                      user={ user }\n      />\n        <div id=\"view-entry-paper\">\n          <div id=\"view-entry-pattern\">\n              <div id=\"view-entry-content\">\n                <h1>{selectedLog.book}: Entry {selectedLog.book_entry_number} </h1 >\n                <form onSubmit={ handleSubmit }>\n                  <div onClick={() => {\n                    setEditEntry({\n                      ...editEntry, \n                      quickInfoShowInput: true, \n                      changesMade: true,\n                    })\n                  }}>\n                    <h2 className=\"view-entry-text\">Quick Info: </h2>\n                    {editEntry.quickInfoShowInput ? \n                      <input \n                        value={editableLog.quick_info} \n                        name=\"quick_info\"\n                        onChange={ e => handleInputChange(e) }\n                      />\n                      :\n                      <h2 className=\"view-entry-text\">{selectedLog.quick_info} </h2>\n                    }\n                  </div>\n                  <canvas id=\"canvas-id\" onMouseDown={() => canvasClicked()} />\n                  <br />\n                  <h2 className=\"view-entry-text\">Procedure: </h2>\n                    {editableLog.procedures.map((p, i) => {\n                      return (\n                        <div className=\"view-entry-procedure-div\">\n                          {editEntry.procedures[i] && editEntry.procedures[i].dateShowInput ?\n                            <input \n                              value={p.date} \n                              name=\"date\"\n                              onChange={ e => handleProcedureChange(e, i) }\n                            />\n                          :\n                            <h2 className=\"view-entry-procedure-date\" \n                                onClick={() => {\n                                  setEditEntry({\n                                    ...editEntry,\n                                    changesMade: true,\n                                    procedures: [\n                                      ...editEntry.procedures.slice(0, i),\n                                      {\n                                        ...editEntry.procedures[i],\n                                        dateShowInput: true,\n                                      },\n                                      ...editEntry.procedures.slice(i + 1)\n                                    ]\n                                  })\n                                }}\n                            >\n                              {p.date} \n                            </h2>\n                          }\n                          {editEntry.procedures[i] && editEntry.procedures[i].entryShowInput ?\n                            <input \n                              value={p.entry} \n                              name=\"entry\"\n                              onChange={ e => handleProcedureChange(e, i) }\n                            />\n                          :\n                            <h2 className=\"view-entry-procedure-entry\"\n                                onClick={() => {\n                                  setEditEntry({\n                                    ...editEntry,\n                                    changesMade: true,\n                                    procedures: [\n                                      ...editEntry.procedures.slice(0, i),\n                                      {\n                                        ...editEntry.procedures[i],\n                                        entryShowInput: true,\n                                      },\n                                      ...editEntry.procedures.slice(i + 1)\n                                    ]\n                                  })\n                                }}\n                            >\n                              {p.entry}\n                            </h2>\n                          }\n                        </div>\n                      )\n                    })}\n                  <div onClick={() => {\n                    setEditEntry({\n                      ...editEntry, \n                      resultsShowInput: true, \n                      changesMade: true,\n                    })\n                  }}>\n                    <h2 className=\"view-entry-text\">Results: </h2>\n                    {editEntry.resultsShowInput ?\n                      <input \n                        value={editableLog.results}\n                        name=\"results\"\n                        onChange={ e => handleInputChange(e) }\n                      />\n                      :\n                      <h2 className=\"view-entry-text\">{selectedLog.results}</h2>\n                    }\n                  </div>\n                  <div onClick={() => {\n                    setEditEntry({\n                      ...editEntry, \n                      yieldShowInput: true, \n                      changesMade: true,\n                    })\n                  }}>\n                    <h2 className=\"view-entry-text\">Yield: </h2>\n                    {editEntry.yieldShowInput ?\n                      <input \n                        value={editableLog.yield} \n                        name=\"yield\"\n                        onChange={ e => handleInputChange(e) }\n                      />\n                      :\n                      <h2 className=\"view-entry-text\">{selectedLog.yield}</h2>\n                    }\n                  </div>\n                  {/* Need to update lastUpdated when click 'Save Changes' */}\n                  { editEntry.changesMade && \n                    <div id=\"view-entry-div-buttons\">\n                      <Button color=\"primary\" \n                              variant=\"contained\" \n                              type='submit'\n                      >\n                        Save Changes\n                      </Button>\n                      <Button color=\"secondary\" \n                              variant=\"contained\" \n                              onClick={() => {\n                                if (window.confirm('Are you sure you want to discard changes?')) {\n                                  history.push(\"/\")\n                                }\n                              }}\n                      >\n                        Discard Changes\n                      </Button>\n                    </div>\n                  }\n                </form>\n              </div>\n          </div>\n        </div>\n    </>\n  )\n}","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Login } from './components/Login';\nimport { SignUp } from './components/SignUp';\nimport { Home } from './components/home/Home';\nimport { NewEntry } from './components/newEntry/NewEntry';\nimport { ViewEntry } from './components/ViewEntry';\n\nconst ProtectedRoute = ({component: Component, location, ...rest}) => {\n  const dispatch = useDispatch()\n  const user = useSelector(state => state.user)\n  //if no user in redux store, check local storage for token\n  if (!user) {\n    const userObj = localStorage.getItem('user')\n    if (userObj) {\n      const action = {\n        type: 'CREATE_SESSION',\n        value: JSON.parse(userObj)\n      }\n      dispatch(action)\n    }\n  }\n\n  return (\n    <Route\n    {...rest}\n    render={(props) => user.isLoggedIn\n      ? <Component {...props} />\n      : <Redirect to={{ \n          pathname: \"/login\",\n          state: { from: location }\n          }}\n        />\n    }\n    />\n  )\n}\n\nconst Router = () => {\n\n  return (\n    <Switch>\n      <Route path=\"/login\" component={ Login } />\n      <Route path=\"/signup\" component={ SignUp } />\n      <ProtectedRoute exact path=\"/\" component={ Home } />\n      <ProtectedRoute path=\"/new-entry/:id\" component={ NewEntry } />\n      <ProtectedRoute path=\"/view-entry/:id\" component={ ViewEntry } />\n    </Switch>\n  )\n}\n\nexport default Router","import React from 'react';\nimport './styles/App.css';\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\nimport { BrowserRouter } from 'react-router-dom'\nimport Router from './Router'\n\nfunction App() {\n  return (\n      <Provider store={ store }>\n        <BrowserRouter >\n          <Router />\n        </BrowserRouter>\n      </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}